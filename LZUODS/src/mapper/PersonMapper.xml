<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gsb.BasicObject.MBGDAO.PersonMapper">
  <resultMap id="BaseResultMap" type="com.gsb.BasicObject.MBGPOJO.Person">
    <id column="sys_no" jdbcType="INTEGER" property="sysNo" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="native_place" jdbcType="VARCHAR" property="nativePlace" />
    <result column="nation" jdbcType="VARCHAR" property="nation" />
    <result column="salary_no" jdbcType="VARCHAR" property="salaryNo" />
    <result column="salary_lib_no" jdbcType="INTEGER" property="salaryLibNo" />
    <result column="dept_no" jdbcType="INTEGER" property="deptNo" />
    <result column="func" jdbcType="VARCHAR" property="func" />
    <result column="telephone_num" jdbcType="VARCHAR" property="telephoneNum" />
    <result column="title_lv" jdbcType="VARCHAR" property="titleLv" />
    <result column="latest_sympathy_year" jdbcType="DATE" property="latestSympathyYear" />
    <result column="job_end_time" jdbcType="DATE" property="jobEndTime" />
    <result column="job_start_time" jdbcType="DATE" property="jobStartTime" />
    <result column="birth_time" jdbcType="DATE" property="birthTime" />
    <result column="society_no" jdbcType="INTEGER" property="societyNo" />
    <result column="edu_bg" jdbcType="VARCHAR" property="eduBg" />
    <result column="political_status" jdbcType="VARCHAR" property="politicalStatus" />
    <result column="quit_office_type" jdbcType="VARCHAR" property="quitOfficeType" />
    <result column="pension_model_no" jdbcType="INTEGER" property="pensionModelNo" />
    <result column="physical_situation" jdbcType="VARCHAR" property="physicalSituation" />
    <result column="conscription_situation" jdbcType="VARCHAR" property="conscriptionSituation" />
    <result column="is_help_needed" jdbcType="BIT" property="isHelpNeeded" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.gsb.BasicObject.MBGPOJO.PersonWithBLOBs">
    <result column="address" jdbcType="LONGVARCHAR" property="address" />
    <result column="living_situation" jdbcType="LONGVARCHAR" property="livingSituation" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapForShow" type="com.gsb.BasicObject.Beans.SourcePerson">
		<result column="address" jdbcType="LONGVARCHAR" property="address" />
		<result column="living_situation" jdbcType="LONGVARCHAR"
			property="livingSituation" />
		<association property="dept" column="dept_no"
			javaType="com.gsb.BasicObject.MBGPOJO.Department" select="selectDeptWithId" />
		<association property="society" column="society_no"
			javaType="com.gsb.BasicObject.MBGPOJO.Society" select="selectSocietyWithId" />
		<association property="slib" column="salary_lib_no"
			javaType="com.gsb.BasicObject.MBGPOJO.SalaryLib" select="selectSLibWithId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    sys_no, name, gender, native_place, nation, salary_no, salary_lib_no, dept_no, func, 
    telephone_num, title_lv, latest_sympathy_year, job_end_time, job_start_time, birth_time, 
    society_no, edu_bg, political_status, quit_office_type, pension_model_no, physical_situation, 
    conscription_situation, is_help_needed
  </sql>
  <sql id="Blob_Column_List">
    address, living_situation
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.gsb.BasicObject.MBGPOJO.PersonExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from basic_info_table
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.gsb.BasicObject.MBGPOJO.PersonExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from basic_info_table
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapForShow">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from basic_info_table
    where sys_no = #{sysNo,jdbcType=INTEGER}
  </select>
  <select id="selectAllForShow" parameterType="com.gsb.BasicObject.MBGPOJO.PersonExample" resultMap="ResultMapForShow">
	select
	<if test="distinct">
		distinct
	</if>
	<include refid="Base_Column_List" />
	,
	<include refid="Blob_Column_List" />
	from basic_info_table
	<if test="_parameter != null">
		<include refid="Example_Where_Clause" />
	</if>
	<if test="orderByClause != null">
		order by ${orderByClause}
	</if>
  </select>
  <select id="selectAllNations" resultType="string">
	select distinct nation
	from
	basic_info_table
  </select>
  <select id="selectAllFunc" resultType="string">
	select distinct func
	from
	basic_info_table
  </select>
  <select id="selectAllTitleLv" resultType="string">
	select distinct title_lv
	from
	basic_info_table
  </select>
  <select id="selectAllPoliticalStatus" resultType="string">
	select distinct political_status
	from
	basic_info_table
  </select>
  <select id="selectAllConscriptionSituation" resultType="string">
	select distinct conscription_situation
	from
	basic_info_table
  </select>
  <select id="selectAllEduBg" resultType="string">
	select distinct edu_bg
	from
	basic_info_table
  </select>
  <select id="selectDeptWithId" resultType="com.gsb.BasicObject.MBGPOJO.Department">
	select * from dept_table where dept_no=#{dept_no}
  </select>
  <select id="selectSocietyWithId" resultType="com.gsb.BasicObject.MBGPOJO.Society">
	select * from society_table where society_no=#{society_no}
  </select>
  <select id="selectSLibWithId" resultType="com.gsb.BasicObject.MBGPOJO.SalaryLib">
	select * from salary_lib_table where salary_lib_no=#{salary_lib_no}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from basic_info_table
    where sys_no = #{sysNo,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.gsb.BasicObject.MBGPOJO.PersonExample">
    delete from basic_info_table
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gsb.BasicObject.MBGPOJO.PersonWithBLOBs">
    insert into basic_info_table (sys_no, name, gender, 
      native_place, nation, salary_no, 
      salary_lib_no, dept_no, func, 
      telephone_num, title_lv, latest_sympathy_year, 
      job_end_time, job_start_time, birth_time, 
      society_no, edu_bg, political_status, 
      quit_office_type, pension_model_no, physical_situation, 
      conscription_situation, is_help_needed, address, 
      living_situation)
    values (#{sysNo,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR}, 
      #{nativePlace,jdbcType=VARCHAR}, #{nation,jdbcType=VARCHAR}, #{salaryNo,jdbcType=VARCHAR}, 
      #{salaryLibNo,jdbcType=INTEGER}, #{deptNo,jdbcType=INTEGER}, #{func,jdbcType=VARCHAR}, 
      #{telephoneNum,jdbcType=VARCHAR}, #{titleLv,jdbcType=VARCHAR}, #{latestSympathyYear,jdbcType=DATE}, 
      #{jobEndTime,jdbcType=DATE}, #{jobStartTime,jdbcType=DATE}, #{birthTime,jdbcType=DATE}, 
      #{societyNo,jdbcType=INTEGER}, #{eduBg,jdbcType=VARCHAR}, #{politicalStatus,jdbcType=VARCHAR}, 
      #{quitOfficeType,jdbcType=VARCHAR}, #{pensionModelNo,jdbcType=INTEGER}, #{physicalSituation,jdbcType=VARCHAR}, 
      #{conscriptionSituation,jdbcType=VARCHAR}, #{isHelpNeeded,jdbcType=BIT}, #{address,jdbcType=LONGVARCHAR}, 
      #{livingSituation,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.gsb.BasicObject.MBGPOJO.PersonWithBLOBs">
    insert into basic_info_table
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sysNo != null">
        sys_no,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="nativePlace != null">
        native_place,
      </if>
      <if test="nation != null">
        nation,
      </if>
      <if test="salaryNo != null">
        salary_no,
      </if>
      <if test="salaryLibNo != null">
        salary_lib_no,
      </if>
      <if test="deptNo != null">
        dept_no,
      </if>
      <if test="func != null">
        func,
      </if>
      <if test="telephoneNum != null">
        telephone_num,
      </if>
      <if test="titleLv != null">
        title_lv,
      </if>
      <if test="latestSympathyYear != null">
        latest_sympathy_year,
      </if>
      <if test="jobEndTime != null">
        job_end_time,
      </if>
      <if test="jobStartTime != null">
        job_start_time,
      </if>
      <if test="birthTime != null">
        birth_time,
      </if>
      <if test="societyNo != null">
        society_no,
      </if>
      <if test="eduBg != null">
        edu_bg,
      </if>
      <if test="politicalStatus != null">
        political_status,
      </if>
      <if test="quitOfficeType != null">
        quit_office_type,
      </if>
      <if test="pensionModelNo != null">
        pension_model_no,
      </if>
      <if test="physicalSituation != null">
        physical_situation,
      </if>
      <if test="conscriptionSituation != null">
        conscription_situation,
      </if>
      <if test="isHelpNeeded != null">
        is_help_needed,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="livingSituation != null">
        living_situation,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sysNo != null">
        #{sysNo,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="nativePlace != null">
        #{nativePlace,jdbcType=VARCHAR},
      </if>
      <if test="nation != null">
        #{nation,jdbcType=VARCHAR},
      </if>
      <if test="salaryNo != null">
        #{salaryNo,jdbcType=VARCHAR},
      </if>
      <if test="salaryLibNo != null">
        #{salaryLibNo,jdbcType=INTEGER},
      </if>
      <if test="deptNo != null">
        #{deptNo,jdbcType=INTEGER},
      </if>
      <if test="func != null">
        #{func,jdbcType=VARCHAR},
      </if>
      <if test="telephoneNum != null">
        #{telephoneNum,jdbcType=VARCHAR},
      </if>
      <if test="titleLv != null">
        #{titleLv,jdbcType=VARCHAR},
      </if>
      <if test="latestSympathyYear != null">
        #{latestSympathyYear,jdbcType=DATE},
      </if>
      <if test="jobEndTime != null">
        #{jobEndTime,jdbcType=DATE},
      </if>
      <if test="jobStartTime != null">
        #{jobStartTime,jdbcType=DATE},
      </if>
      <if test="birthTime != null">
        #{birthTime,jdbcType=DATE},
      </if>
      <if test="societyNo != null">
        #{societyNo,jdbcType=INTEGER},
      </if>
      <if test="eduBg != null">
        #{eduBg,jdbcType=VARCHAR},
      </if>
      <if test="politicalStatus != null">
        #{politicalStatus,jdbcType=VARCHAR},
      </if>
      <if test="quitOfficeType != null">
        #{quitOfficeType,jdbcType=VARCHAR},
      </if>
      <if test="pensionModelNo != null">
        #{pensionModelNo,jdbcType=INTEGER},
      </if>
      <if test="physicalSituation != null">
        #{physicalSituation,jdbcType=VARCHAR},
      </if>
      <if test="conscriptionSituation != null">
        #{conscriptionSituation,jdbcType=VARCHAR},
      </if>
      <if test="isHelpNeeded != null">
        #{isHelpNeeded,jdbcType=BIT},
      </if>
      <if test="address != null">
        #{address,jdbcType=LONGVARCHAR},
      </if>
      <if test="livingSituation != null">
        #{livingSituation,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gsb.BasicObject.MBGPOJO.PersonExample" resultType="java.lang.Long">
    select count(sys_no) from basic_info_table
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update basic_info_table
    <set>
      <if test="record.sysNo != null">
        sys_no = #{record.sysNo,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=CHAR},
      </if>
      <if test="record.nativePlace != null">
        native_place = #{record.nativePlace,jdbcType=VARCHAR},
      </if>
      <if test="record.nation != null">
        nation = #{record.nation,jdbcType=VARCHAR},
      </if>
      <if test="record.salaryNo != null">
        salary_no = #{record.salaryNo,jdbcType=VARCHAR},
      </if>
      <if test="record.salaryLibNo != null">
        salary_lib_no = #{record.salaryLibNo,jdbcType=INTEGER},
      </if>
      <if test="record.deptNo != null">
        dept_no = #{record.deptNo,jdbcType=INTEGER},
      </if>
      <if test="record.func != null">
        func = #{record.func,jdbcType=VARCHAR},
      </if>
      <if test="record.telephoneNum != null">
        telephone_num = #{record.telephoneNum,jdbcType=VARCHAR},
      </if>
      <if test="record.titleLv != null">
        title_lv = #{record.titleLv,jdbcType=VARCHAR},
      </if>
      <if test="record.latestSympathyYear != null">
        latest_sympathy_year = #{record.latestSympathyYear,jdbcType=DATE},
      </if>
      <if test="record.jobEndTime != null">
        job_end_time = #{record.jobEndTime,jdbcType=DATE},
      </if>
      <if test="record.jobStartTime != null">
        job_start_time = #{record.jobStartTime,jdbcType=DATE},
      </if>
      <if test="record.birthTime != null">
        birth_time = #{record.birthTime,jdbcType=DATE},
      </if>
      <if test="record.societyNo != null">
        society_no = #{record.societyNo,jdbcType=INTEGER},
      </if>
      <if test="record.eduBg != null">
        edu_bg = #{record.eduBg,jdbcType=VARCHAR},
      </if>
      <if test="record.politicalStatus != null">
        political_status = #{record.politicalStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.quitOfficeType != null">
        quit_office_type = #{record.quitOfficeType,jdbcType=VARCHAR},
      </if>
      <if test="record.pensionModelNo != null">
        pension_model_no = #{record.pensionModelNo,jdbcType=INTEGER},
      </if>
      <if test="record.physicalSituation != null">
        physical_situation = #{record.physicalSituation,jdbcType=VARCHAR},
      </if>
      <if test="record.conscriptionSituation != null">
        conscription_situation = #{record.conscriptionSituation,jdbcType=VARCHAR},
      </if>
      <if test="record.isHelpNeeded != null">
        is_help_needed = #{record.isHelpNeeded,jdbcType=BIT},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.livingSituation != null">
        living_situation = #{record.livingSituation,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update basic_info_table
    set sys_no = #{record.sysNo,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=CHAR},
      native_place = #{record.nativePlace,jdbcType=VARCHAR},
      nation = #{record.nation,jdbcType=VARCHAR},
      salary_no = #{record.salaryNo,jdbcType=VARCHAR},
      salary_lib_no = #{record.salaryLibNo,jdbcType=INTEGER},
      dept_no = #{record.deptNo,jdbcType=INTEGER},
      func = #{record.func,jdbcType=VARCHAR},
      telephone_num = #{record.telephoneNum,jdbcType=VARCHAR},
      title_lv = #{record.titleLv,jdbcType=VARCHAR},
      latest_sympathy_year = #{record.latestSympathyYear,jdbcType=DATE},
      job_end_time = #{record.jobEndTime,jdbcType=DATE},
      job_start_time = #{record.jobStartTime,jdbcType=DATE},
      birth_time = #{record.birthTime,jdbcType=DATE},
      society_no = #{record.societyNo,jdbcType=INTEGER},
      edu_bg = #{record.eduBg,jdbcType=VARCHAR},
      political_status = #{record.politicalStatus,jdbcType=VARCHAR},
      quit_office_type = #{record.quitOfficeType,jdbcType=VARCHAR},
      pension_model_no = #{record.pensionModelNo,jdbcType=INTEGER},
      physical_situation = #{record.physicalSituation,jdbcType=VARCHAR},
      conscription_situation = #{record.conscriptionSituation,jdbcType=VARCHAR},
      is_help_needed = #{record.isHelpNeeded,jdbcType=BIT},
      address = #{record.address,jdbcType=LONGVARCHAR},
      living_situation = #{record.livingSituation,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update basic_info_table
    set sys_no = #{record.sysNo,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=CHAR},
      native_place = #{record.nativePlace,jdbcType=VARCHAR},
      nation = #{record.nation,jdbcType=VARCHAR},
      salary_no = #{record.salaryNo,jdbcType=VARCHAR},
      salary_lib_no = #{record.salaryLibNo,jdbcType=INTEGER},
      dept_no = #{record.deptNo,jdbcType=INTEGER},
      func = #{record.func,jdbcType=VARCHAR},
      telephone_num = #{record.telephoneNum,jdbcType=VARCHAR},
      title_lv = #{record.titleLv,jdbcType=VARCHAR},
      latest_sympathy_year = #{record.latestSympathyYear,jdbcType=DATE},
      job_end_time = #{record.jobEndTime,jdbcType=DATE},
      job_start_time = #{record.jobStartTime,jdbcType=DATE},
      birth_time = #{record.birthTime,jdbcType=DATE},
      society_no = #{record.societyNo,jdbcType=INTEGER},
      edu_bg = #{record.eduBg,jdbcType=VARCHAR},
      political_status = #{record.politicalStatus,jdbcType=VARCHAR},
      quit_office_type = #{record.quitOfficeType,jdbcType=VARCHAR},
      pension_model_no = #{record.pensionModelNo,jdbcType=INTEGER},
      physical_situation = #{record.physicalSituation,jdbcType=VARCHAR},
      conscription_situation = #{record.conscriptionSituation,jdbcType=VARCHAR},
      is_help_needed = #{record.isHelpNeeded,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gsb.BasicObject.MBGPOJO.PersonWithBLOBs">
    update basic_info_table
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="nativePlace != null">
        native_place = #{nativePlace,jdbcType=VARCHAR},
      </if>
      <if test="nation != null">
        nation = #{nation,jdbcType=VARCHAR},
      </if>
      <if test="salaryNo != null">
        salary_no = #{salaryNo,jdbcType=VARCHAR},
      </if>
      <if test="salaryLibNo != null">
        salary_lib_no = #{salaryLibNo,jdbcType=INTEGER},
      </if>
      <if test="deptNo != null">
        dept_no = #{deptNo,jdbcType=INTEGER},
      </if>
      <if test="func != null">
        func = #{func,jdbcType=VARCHAR},
      </if>
      <if test="telephoneNum != null">
        telephone_num = #{telephoneNum,jdbcType=VARCHAR},
      </if>
      <if test="titleLv != null">
        title_lv = #{titleLv,jdbcType=VARCHAR},
      </if>
      <if test="latestSympathyYear != null">
        latest_sympathy_year = #{latestSympathyYear,jdbcType=DATE},
      </if>
      <if test="jobEndTime != null">
        job_end_time = #{jobEndTime,jdbcType=DATE},
      </if>
      <if test="jobStartTime != null">
        job_start_time = #{jobStartTime,jdbcType=DATE},
      </if>
      <if test="birthTime != null">
        birth_time = #{birthTime,jdbcType=DATE},
      </if>
      <if test="societyNo != null">
        society_no = #{societyNo,jdbcType=INTEGER},
      </if>
      <if test="eduBg != null">
        edu_bg = #{eduBg,jdbcType=VARCHAR},
      </if>
      <if test="politicalStatus != null">
        political_status = #{politicalStatus,jdbcType=VARCHAR},
      </if>
      <if test="quitOfficeType != null">
        quit_office_type = #{quitOfficeType,jdbcType=VARCHAR},
      </if>
      <if test="pensionModelNo != null">
        pension_model_no = #{pensionModelNo,jdbcType=INTEGER},
      </if>
      <if test="physicalSituation != null">
        physical_situation = #{physicalSituation,jdbcType=VARCHAR},
      </if>
      <if test="conscriptionSituation != null">
        conscription_situation = #{conscriptionSituation,jdbcType=VARCHAR},
      </if>
      <if test="isHelpNeeded != null">
        is_help_needed = #{isHelpNeeded,jdbcType=BIT},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=LONGVARCHAR},
      </if>
      <if test="livingSituation != null">
        living_situation = #{livingSituation,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where sys_no = #{sysNo,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.gsb.BasicObject.MBGPOJO.PersonWithBLOBs">
    update basic_info_table
    set name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      native_place = #{nativePlace,jdbcType=VARCHAR},
      nation = #{nation,jdbcType=VARCHAR},
      salary_no = #{salaryNo,jdbcType=VARCHAR},
      salary_lib_no = #{salaryLibNo,jdbcType=INTEGER},
      dept_no = #{deptNo,jdbcType=INTEGER},
      func = #{func,jdbcType=VARCHAR},
      telephone_num = #{telephoneNum,jdbcType=VARCHAR},
      title_lv = #{titleLv,jdbcType=VARCHAR},
      latest_sympathy_year = #{latestSympathyYear,jdbcType=DATE},
      job_end_time = #{jobEndTime,jdbcType=DATE},
      job_start_time = #{jobStartTime,jdbcType=DATE},
      birth_time = #{birthTime,jdbcType=DATE},
      society_no = #{societyNo,jdbcType=INTEGER},
      edu_bg = #{eduBg,jdbcType=VARCHAR},
      political_status = #{politicalStatus,jdbcType=VARCHAR},
      quit_office_type = #{quitOfficeType,jdbcType=VARCHAR},
      pension_model_no = #{pensionModelNo,jdbcType=INTEGER},
      physical_situation = #{physicalSituation,jdbcType=VARCHAR},
      conscription_situation = #{conscriptionSituation,jdbcType=VARCHAR},
      is_help_needed = #{isHelpNeeded,jdbcType=BIT},
      address = #{address,jdbcType=LONGVARCHAR},
      living_situation = #{livingSituation,jdbcType=LONGVARCHAR}
    where sys_no = #{sysNo,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gsb.BasicObject.MBGPOJO.Person">
    update basic_info_table
    set name = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      native_place = #{nativePlace,jdbcType=VARCHAR},
      nation = #{nation,jdbcType=VARCHAR},
      salary_no = #{salaryNo,jdbcType=VARCHAR},
      salary_lib_no = #{salaryLibNo,jdbcType=INTEGER},
      dept_no = #{deptNo,jdbcType=INTEGER},
      func = #{func,jdbcType=VARCHAR},
      telephone_num = #{telephoneNum,jdbcType=VARCHAR},
      title_lv = #{titleLv,jdbcType=VARCHAR},
      latest_sympathy_year = #{latestSympathyYear,jdbcType=DATE},
      job_end_time = #{jobEndTime,jdbcType=DATE},
      job_start_time = #{jobStartTime,jdbcType=DATE},
      birth_time = #{birthTime,jdbcType=DATE},
      society_no = #{societyNo,jdbcType=INTEGER},
      edu_bg = #{eduBg,jdbcType=VARCHAR},
      political_status = #{politicalStatus,jdbcType=VARCHAR},
      quit_office_type = #{quitOfficeType,jdbcType=VARCHAR},
      pension_model_no = #{pensionModelNo,jdbcType=INTEGER},
      physical_situation = #{physicalSituation,jdbcType=VARCHAR},
      conscription_situation = #{conscriptionSituation,jdbcType=VARCHAR},
      is_help_needed = #{isHelpNeeded,jdbcType=BIT}
    where sys_no = #{sysNo,jdbcType=INTEGER}
  </update>
</mapper>