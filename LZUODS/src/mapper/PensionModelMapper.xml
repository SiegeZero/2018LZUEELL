<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gsb.BasicObject.MBGDAO.PensionModelMapper">
  <resultMap id="BaseResultMap" type="com.gsb.BasicObject.MBGPOJO.PensionModel">
    <id column="pension_model_no" jdbcType="INTEGER" property="pensionModelNo" />
    <result column="pension_model" jdbcType="VARCHAR" property="pensionModel" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.gsb.BasicObject.MBGPOJO.PensionModel">
    <result column="pension_remark" jdbcType="LONGVARCHAR" property="pensionRemark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    pension_model_no, pension_model
  </sql>
  <sql id="Blob_Column_List">
    pension_remark
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.gsb.BasicObject.MBGPOJO.PensionModelExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from pension_model_table
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.gsb.BasicObject.MBGPOJO.PensionModelExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pension_model_table
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from pension_model_table
    where pension_model_no = #{pensionModelNo,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pension_model_table
    where pension_model_no = #{pensionModelNo,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.gsb.BasicObject.MBGPOJO.PensionModelExample">
    delete from pension_model_table
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gsb.BasicObject.MBGPOJO.PensionModel">
    insert into pension_model_table (pension_model_no, pension_model, pension_remark
      )
    values (#{pensionModelNo,jdbcType=INTEGER}, #{pensionModel,jdbcType=VARCHAR}, #{pensionRemark,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.gsb.BasicObject.MBGPOJO.PensionModel">
    insert into pension_model_table
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pensionModelNo != null">
        pension_model_no,
      </if>
      <if test="pensionModel != null">
        pension_model,
      </if>
      <if test="pensionRemark != null">
        pension_remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pensionModelNo != null">
        #{pensionModelNo,jdbcType=INTEGER},
      </if>
      <if test="pensionModel != null">
        #{pensionModel,jdbcType=VARCHAR},
      </if>
      <if test="pensionRemark != null">
        #{pensionRemark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gsb.BasicObject.MBGPOJO.PensionModelExample" resultType="java.lang.Long">
    select count(*) from pension_model_table
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pension_model_table
    <set>
      <if test="record.pensionModelNo != null">
        pension_model_no = #{record.pensionModelNo,jdbcType=INTEGER},
      </if>
      <if test="record.pensionModel != null">
        pension_model = #{record.pensionModel,jdbcType=VARCHAR},
      </if>
      <if test="record.pensionRemark != null">
        pension_remark = #{record.pensionRemark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update pension_model_table
    set pension_model_no = #{record.pensionModelNo,jdbcType=INTEGER},
      pension_model = #{record.pensionModel,jdbcType=VARCHAR},
      pension_remark = #{record.pensionRemark,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pension_model_table
    set pension_model_no = #{record.pensionModelNo,jdbcType=INTEGER},
      pension_model = #{record.pensionModel,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gsb.BasicObject.MBGPOJO.PensionModel">
    update pension_model_table
    <set>
      <if test="pensionModel != null">
        pension_model = #{pensionModel,jdbcType=VARCHAR},
      </if>
      <if test="pensionRemark != null">
        pension_remark = #{pensionRemark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where pension_model_no = #{pensionModelNo,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.gsb.BasicObject.MBGPOJO.PensionModel">
    update pension_model_table
    set pension_model = #{pensionModel,jdbcType=VARCHAR},
      pension_remark = #{pensionRemark,jdbcType=LONGVARCHAR}
    where pension_model_no = #{pensionModelNo,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gsb.BasicObject.MBGPOJO.PensionModel">
    update pension_model_table
    set pension_model = #{pensionModel,jdbcType=VARCHAR}
    where pension_model_no = #{pensionModelNo,jdbcType=INTEGER}
  </update>
</mapper>